@page "/"
@using SO73878118.Data

<PageTitle>Index</PageTitle>

<EditForm Model="dateTimeModel" OnInvalidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>
            Name:
            <InputText @bind-Value="dateTimeModel.Name" />
        </label>
        <ValidationMessage For="@(() => dateTimeModel.Name)" />
    </p>

    <p>
        <label>
            From Date:
            <InputDate @bind-Value="dateTimeModel.FromDate" />
        </label>
        <ValidationMessage For="@(() => dateTimeModel.FromDate)" />
    </p>

    <p>
        <label>
            To Date:
            <InputDate @bind-Value="dateTimeModel.ToDate" />
        </label>
        <ValidationMessage For="@(() => dateTimeModel.ToDate)" />
    </p>

    <button type="submit">Submit</button>
</EditForm>

@code {
    //private EditContext? editContext;
    private DateTimeModel dateTimeModel = new();

    //protected override void OnInitialized()
    //{
    //    editContext = new EditContext(dateTimeModel);
    //}

    //private void HandleFromDateChanged(DateTime? fromDate)
    //{
    //    dateTimeModel.FromDate = fromDate;

    //    if (editContext != null && dateTimeModel.ToDate != null)
    //    {
    //        FieldIdentifier toDateField = editContext.Field(nameof(DateTimeModel.ToDate));
    //        editContext.NotifyFieldChanged(toDateField);
    //    }
    //}

    //private void HandleToDateChanged(DateTime? toDate)
    //{
    //    dateTimeModel.ToDate = toDate;

    //    if (editContext != null && dateTimeModel.FromDate != null)
    //    {
    //        FieldIdentifier fromDateField = editContext.Field(nameof(DateTimeModel.FromDate));
    //        editContext.NotifyFieldChanged(fromDateField);
    //    }
    //}

    private void HandleValidSubmit()
    {
    }
}
